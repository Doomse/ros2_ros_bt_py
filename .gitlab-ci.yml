variables:
  CI_SCRIPTS_BRANCH: master
  ENABLE_COVERAGE_TESTING: "true"
  DEB_BUILD: "false"
  DOCS_SOURCE: "ros_bt_py/doc/source"
  AFTER_INSTALL_TARGET_DEPENDENCIES: "pip3 install coverage[toml]"
  UPSTREAM_WORKSPACE: "upstream_workspace.yaml"

stages:
  - check
  - build
  - upload
  - deploy

.build_matrix:
  parallel:
    matrix:
      - ROS_DISTRO: humble
        CI_IMAGE: ids-git.fzi.de:5555/continuous_integration/ci_docker_images/ubuntu_22.04_ros2:humble
      - ROS_DISTRO: iron
        CI_IMAGE: ids-git.fzi.de:5555/continuous_integration/ci_docker_images/ubuntu_22.04_ros2:iron
      - ROS_DISTRO: rolling
        CI_IMAGE: ids-git.fzi.de:5555/continuous_integration/ci_docker_images/ubuntu_22.04_ros2:rolling
include:
  - project: 'continuous_integration/ci_scripts'
    ref: master
    file: '/gitlab-ci-yml/ros2_pipeline.yml'
  - project: 'continuous_integration/ci_scripts'
    ref: master
    file: '/gitlab-ci-yml/doc_sphinx.yml'

pre-commit:
  image: $CI_IMAGE
  stage: check
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  script:
    - source /opt/ros/${ROS_DISTRO}/setup.bash
    - pip3 install pre-commit # install pre-commit
    - pre-commit run -a
  cache:
    paths:
      - ${PRE_COMMIT_HOME}
  parallel: !reference [.build_matrix, parallel]
